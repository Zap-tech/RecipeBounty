;; clj CLI configuration file
;;
;; Notes:
;;
;; - Additional Dependencies are managed by yarn within the top-level package.json file
;;
;;   - Add new npm dependencies with `yarn add <package-name>`, update with `make webpack`
;;
;; - Browser-based Dependencies are handled by webpack
;;
;;   - entry-point is in src/js/index_ui.js for exposing modules to
;;     js/Window object. This is bundled and used by figwheel (through :foreign-libs).

{:deps {bidi {:mvn/version "2.1.4"}
        com.bhauman/figwheel-main {:mvn/version "0.1.9-SNAPSHOT"}
        com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}
        com.taoensso/timbre {:mvn/version "4.10.0"}
        cljs-web3 {:mvn/version "0.19.0-0-11"}
        funcool/cuerdas {:mvn/version "2.0.5"}
        markdown-clj {:mvn/version "1.0.2"}
        mount {:mvn/version "0.1.13"}
        org.clojure/clojure {:mvn/version "1.9.0"}
        org.clojure/clojurescript {:mvn/version "1.10.339"}

        ;; district0x General

        ;; district0x UI Components
        district0x/district-ui-smart-contracts {:mvn/version "1.0.5"}
        district0x/district-ui-reagent-render {:mvn/version "1.0.1"
                                               :exclusions [cljsjs/react-with-addons]}

        ;; district0x Server Components
        district0x/district-server-web3 {:mvn/version "1.0.1"}
        district0x/district-server-smart-contracts {:mvn/version "1.0.9"}} ; Depends on district-server-web3
       

 :aliases {;; Extra Deps for UI
           :deps-ui {:extra-deps
                     {re-frame {:mvn/version "0.10.6"
                                :exclusions [cljsjs/react]}
                      reagent {:mvn/version "0.8.1"
                               :exclusions [cljsjs/react]}}}

           ;; Main Development Environment
           :dev {:main-opts ["-m" "rebel-readline.main"]
                 :extra-paths ["dev/clj"
                               "dev/ui" "dev/server" "dev/shared"
                               "test/ui" "test/server" "test/shared"
                               "dev/resources"]}

           ;; Build and Watch only the UI
           :fig-dev-ui {:main-opts ["-m" "figwheel.main" "-b" "dev-ui" "-r"]
                        :extra-paths ["dev/ui" "dev/shared"
                                      "test/ui" "test/shared"
                                      "dev/resources"]}

           
           ;; Build and Watch only the Server
           :fig-dev-server {:main-opts ["-m" "figwheel.main" "-b" "dev-server" "-r"]
                            :extra-paths ["dev/server" "dev/shared"
                                          "test/server" "test/shared"
                                          "dev/resources"]}

           ;; Production Build of the UI
           :build-prod-ui {:main-opts ["-m" "figwheel.main" "-bo" "prod-ui"]}

           ;; Production Build of the Server
           :build-prod-server {:main-opts ["-m" "figwheel.main" "-bo" "prod-server"]}

           ;; Test Runner script for Server Build
           :test-server {:main-opts ["-m" "figwheel.main" "-co" "dev-server.cljs.edn"
                                     "-m" "rbounty.server.test-runner"]
                         :extra-paths ["dev/server" "dev/shared"
                                       "test/server" "test/shared"
                                       "dev/resources"]}}

 :paths ["src/ui" "src/server" "src/shared" "target" "resources"]}
